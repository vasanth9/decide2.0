{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","ans","setAns","name","setName","name1","setName1","name2","setName2","name3","setName3","name4","setName4","name5","setName5","name6","setName6","name7","setName7","className","onChange","evt","target","value","type","onClick","preventDefault","array","length","push","size","index","Math","floor","random","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9394d835.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction App() {\n  const [ans,setAns]=useState(\"not decided\");\n  const [name,setName]=useState('');const [name1,setName1]=useState('');const [name2,setName2]=useState('');const [name3,setName3]=useState('');\n  const [name4,setName4]=useState('');const [name5,setName5]=useState('');const [name6,setName6]=useState('');\n  const [name7,setName7]=useState(0);\n  function handleChange(evt){\n   setName(evt.target.value);\n  }\n  function handleChange1(evt){\n    setName1(evt.target.value);\n   }\n   function handleChange2(evt){\n    setName2(evt.target.value);\n   }\n   function handleChange3(evt){\n    setName3(evt.target.value);\n   }\n   function handleChange4(evt){\n    setName4(evt.target.value);\n   }\n   function handleChange5(evt){\n    setName5(evt.target.value);\n   }\n   function handleChange6(evt){\n    setName6(evt.target.value);\n   }\n   function submit(evt){\n    evt.preventDefault();\n    const array=[];\n    if(name1.length>0){array.push(name1)}\n    if(name2.length>0){array.push(name2)}\n    if(name3.length>0){array.push(name3)}\n    if(name4.length>0){array.push(name4)}\n    if(name5.length>0){array.push(name5)}\n    if(name6.length>0){array.push(name6)}\n\n    const size=array.length;\n    if(size>0){\n    const index=Math.floor(Math.random() * (size ))+1;\n    console.log(array[index-1],index)\n     setAns(array[index-1])\n     \n     setName7(1);\n    }\n   }\n   function cancel(evt){\n    evt.preventDefault();\n    setName7(0);\n\n    setAns(\"Not Decided yet.\")\n    \n   }\n   if(name7===0){\n  return(\n    \n    <div className=\"container col\">\n      <br/> <br/>\n    <h1 className=\"text-center\">Decide Anything</h1>\n    <br/> <br/>\n    <form>\n      <label>What is your Question...?</label>\n      <br/>\n    <input className=\"form-control\" onChange={handleChange} value={name}/>\n    <br/>\n    <label>List your major options.....</label>\n    <div className=\"container row \">\n    <input className=\"col-5\"onChange={handleChange1} value={name1}/>\n    <span className=\"col-2\"></span>\n    <input className=\"col-5\" onChange={handleChange2} value={name2}/>\n    </div>\n    <br/>\n    <div className=\"container row\">\n    <input className=\"col-5\" onChange={handleChange3} value={name3}/>\n    <span className=\"col-2\"></span>\n    <input  className=\"col-5\" onChange={handleChange4} value={name4}/>\n    </div>\n    <br/>\n    <div className=\"container row\">\n    <input className=\"col-5\" onChange={handleChange5} value={name5}/>\n    <span className=\"col-2\"></span>\n    <input  className=\"col-5\" onChange={handleChange6} value={name6}/>\n    </div>\n    <br/>\n    <div className=\"container row\">\n    <span className=\"col-4\"></span>\n    <button type=\"submit\" value=\"submit\" onClick={submit}className=\" form-control btn-center btn-success col-4\">Submit</button>\n    </div>\n    </form>\n    </div>\n  );}\n  else\n  {\n    return(\n      <div className=\"container \">\n       <br/><br/><br/><br/>\n\n        <h1 className=\"text-success text-center\">\n        {ans}\n        </h1>\n        <br/><br/>\n        <div className=\"container row\">\n          <span className=\"col-4\"></span>\n        <button  onClick={cancel}className=\" form-control center btn-info col-4\">Cancel</button>\n\n        </div>\n      </div>\n     \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}